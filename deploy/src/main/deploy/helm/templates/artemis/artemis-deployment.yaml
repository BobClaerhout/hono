---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  labels:
    {{- include "hono.std.labels" . | nindent 4 }}
    app.kubernetes.io/component: amqp-messaging-network-broker
  name: hono-artemis
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ template "hono.name" . }}
      app.kubernetes.io/component: amqp-messaging-network-broker
  template:
    metadata:
      labels:
        {{- include "hono.std.labels" . | nindent 8 }}
        app.kubernetes.io/component: amqp-messaging-network-broker
    spec:
      containers:
      - command:
        - /opt/artemis/bin/artemis
        - run
        - xml:/etc/hono/artemis-bootstrap.xml
        env:
        - name: ARTEMIS_CONFIGURATION
          value: /etc/hono
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: {{ .Values.artemisImageName | quote }}
        ports:
        - name: amqps
          containerPort: 5671
          protocol: TCP
        imagePullPolicy: IfNotPresent
        resources:
          limits:
            memory: "512Mi"
          requests:
            memory: "256Mi"
        livenessProbe:
          initialDelaySeconds: 20
          periodSeconds: 9
          tcpSocket:
            port: 5671
          timeoutSeconds: 1
        name: apache-activemq-artemis
        readinessProbe:
          initialDelaySeconds: 5
          periodSeconds: 5
          tcpSocket:
            port: 5671
          timeoutSeconds: 1
        securityContext:
          privileged: false
        volumeMounts:
        - mountPath: /etc/hono
          name: config
          readOnly: true
      volumes:
      - name: config
        secret:
          secretName: hono-artemis-conf
