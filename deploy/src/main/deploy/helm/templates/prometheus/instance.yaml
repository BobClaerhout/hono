{{- $args := dict "dot" . "component" "metrics" "name" "prometheus" }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  {{- include "hono.metadata" $args | nindent 2 }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  {{- include "hono.metadata" $args | nindent 2 }}
rules:
- apiGroups: [""]
  resources:
  - services
  - endpoints
  - pods
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources:
  - configmaps
  verbs: ["get"]
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  {{- include "hono.metadata" $args | nindent 2 }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: {{ .Release.Name}}-prometheus
subjects:
- kind: ServiceAccount
  name: {{ .Release.Name}}-prometheus
  namespace: {{ .Release.Namespace | quote }}
---
apiVersion: monitoring.coreos.com/v1
kind: Prometheus
metadata:
  {{- include "hono.metadata" $args | nindent 2 }}
spec:
  serviceAccountName: {{ .Release.Name}}-prometheus
  serviceMonitorSelector:
    matchLabels:
      app.kubernetes.io/name: {{ template "hono.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/component: metrics
  podMetadata:
    labels:
      app.kubernetes.io/name: {{ template "hono.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/component: metrics
  resources:
    requests:
      memory: 400Mi
  securityContext: {}
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  {{- $serviceMonitorArgs := dict "dot" . "component" "metrics" "name" "service-monitor" }}
  {{- include "hono.metadata" $serviceMonitorArgs | nindent 2 }}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ template "hono.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      hono-metrics: prometheus
  endpoints:
    - scheme: HTTPS
      targetPort: {{ .Values.monitoring.prometheus.port }}
      path: /prometheus
      interval: 5s
      tlsConfig:
        insecureSkipVerify: true
